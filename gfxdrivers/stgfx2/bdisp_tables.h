/*
   ST Microelectronics BDispII driver - filters etc.

   (c) Copyright 2007/2008  STMicroelectronics Ltd.

   All rights reserved.

   This library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2 of the License, or (at your option) any later version.

   This library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with this library; if not, write to the
   Free Software Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.
*/

#ifndef __BDISP_TABLES_H__
#define __BDISP_TABLES_H__

#ifdef __IS_BDISP_ACCEL_C__
#include "bdisp_accel_types.h"


/* 5x8 and 8x8 Filter coefficients for both H & V resize. */
#define BDISP_AQ_BLIT_FILTER_8X8_TABLE_SIZE   64
#define BDISP_AQ_BLIT_FILTER_5X8_TABLE_SIZE   40

struct _bdisp_aq_blitfilter_coeffs_range
{
  int scale_min; /* 16.16 format */
  int scale_max; /* 16.16 format */
};

struct _bdisp_aq_blitfilter_coeffs_8x8
{
  struct _bdisp_aq_blitfilter_coeffs_range range;
  unsigned char filter_coeffs[BDISP_AQ_BLIT_FILTER_8X8_TABLE_SIZE];
};

struct _bdisp_aq_blitfilter_coeffs_5x8
{
  struct _bdisp_aq_blitfilter_coeffs_range range;
  unsigned char filter_coeffs[BDISP_AQ_BLIT_FILTER_5X8_TABLE_SIZE];
};


static const struct _bdisp_aq_blitfilter_coeffs_8x8 bdisp_aq_blitter_8x8_filters[] =
{
  { { 0x00000, 0x0e640 }, // { 0, 921 },
    { 0x00,  0x00,  0x00,  0x00,  0x40,  0x00,  0x00,  0x00,
      0x00,  0x00,  0xff,  0x07,  0x3d,  0xfc,  0x01,  0x00,
      0x00,  0x01,  0xfd,  0x11,  0x36,  0xf9,  0x02,  0x00,
      0x00,  0x01,  0xfb,  0x1b,  0x2e,  0xf9,  0x02,  0x00,
      0x00,  0x01,  0xf9,  0x26,  0x26,  0xf9,  0x01,  0x00,
      0x00,  0x02,  0xf9,  0x30,  0x19,  0xfb,  0x01,  0x00,
      0x00,  0x02,  0xf9,  0x39,  0x0e,  0xfd,  0x01,  0x00,
      0x00,  0x01,  0xfc,  0x3e,  0x06,  0xff,  0x00,  0x00 }
  },
  { { 0x0e640, 0x10000 }, // { 921, 1024 },
    { 0x00,  0x00,  0x00,  0x00,  0x40,  0x00,  0x00,  0x00,
      0xff,  0x03,  0xfd,  0x08,  0x3e,  0xf9,  0x04,  0xfe,
      0xfd,  0x06,  0xf8,  0x13,  0x3b,  0xf4,  0x07,  0xfc,
      0xfb,  0x08,  0xf5,  0x1f,  0x34,  0xf1,  0x09,  0xfb,
      0xfb,  0x09,  0xf2,  0x2b,  0x2a,  0xf1,  0x09,  0xfb,
      0xfb,  0x09,  0xf2,  0x35,  0x1e,  0xf4,  0x08,  0xfb,
      0xfc,  0x07,  0xf5,  0x3c,  0x12,  0xf7,  0x06,  0xfd,
      0xfe,  0x04,  0xfa,  0x3f,  0x07,  0xfc,  0x03,  0xff }
  },
  { { 0x10000, 0x11980 }, // { 1024, 1126 },
    { 0x00,  0x00,  0x00,  0x00,  0x40,  0x00,  0x00,  0x00,
      0xff,  0x03,  0xfd,  0x08,  0x3e,  0xf9,  0x04,  0xfe,
      0xfd,  0x06,  0xf8,  0x13,  0x3b,  0xf4,  0x07,  0xfc,
      0xfb,  0x08,  0xf5,  0x1f,  0x34,  0xf1,  0x09,  0xfb,
      0xfb,  0x09,  0xf2,  0x2b,  0x2a,  0xf1,  0x09,  0xfb,
      0xfb,  0x09,  0xf2,  0x35,  0x1e,  0xf4,  0x08,  0xfb,
      0xfc,  0x07,  0xf5,  0x3c,  0x12,  0xf7,  0x06,  0xfd,
      0xfe,  0x04,  0xfa,  0x3f,  0x07,  0xfc,  0x03,  0xff }
  },
  { { 0x11980, 0x13300 }, // { 1126, 1228 },
    { 0x00,  0x00,  0x00,  0x00,  0x40,  0x00,  0x00,  0x00,
      0xff,  0x03,  0xfd,  0x08,  0x3e,  0xf9,  0x04,  0xfe,
      0xfd,  0x06,  0xf8,  0x13,  0x3b,  0xf4,  0x07,  0xfc,
      0xfb,  0x08,  0xf5,  0x1f,  0x34,  0xf1,  0x09,  0xfb,
      0xfb,  0x09,  0xf2,  0x2b,  0x2a,  0xf1,  0x09,  0xfb,
      0xfb,  0x09,  0xf2,  0x35,  0x1e,  0xf4,  0x08,  0xfb,
      0xfc,  0x07,  0xf5,  0x3c,  0x12,  0xf7,  0x06,  0xfd,
      0xfe,  0x04,  0xfa,  0x3f,  0x07,  0xfc,  0x03,  0xff }
  },
  { { 0x13300, 0x14cc0 }, // { 1228, 1331 },
    { 0xfd,  0x04,  0xfc,  0x05,  0x39,  0x05,  0xfc,  0x04,
      0xfc,  0x06,  0xf9,  0x0c,  0x39,  0xfe,  0x00,  0x02,
      0xfb,  0x08,  0xf6,  0x17,  0x35,  0xf9,  0x02,  0x00,
      0xfc,  0x08,  0xf4,  0x20,  0x30,  0xf4,  0x05,  0xff,
      0xfd,  0x07,  0xf4,  0x29,  0x28,  0xf3,  0x07,  0xfd,
      0xff,  0x05,  0xf5,  0x31,  0x1f,  0xf3,  0x08,  0xfc,
      0x00,  0x02,  0xf9,  0x38,  0x14,  0xf6,  0x08,  0xfb,
      0x02,  0x00,  0xff,  0x3a,  0x0b,  0xf8,  0x06,  0xfc }
  },
  { { 0x14cc0, 0x16640 }, // { 1331, 1433 },
    { 0xfc,  0x06,  0xf9,  0x09,  0x34,  0x09,  0xf9,  0x06,
      0xfd,  0x07,  0xf7,  0x10,  0x32,  0x02,  0xfc,  0x05,
      0xfe,  0x07,  0xf6,  0x17,  0x2f,  0xfc,  0xff,  0x04,
      0xff,  0x06,  0xf5,  0x20,  0x2a,  0xf9,  0x01,  0x02,
      0x00,  0x04,  0xf6,  0x27,  0x25,  0xf6,  0x04,  0x00,
      0x02,  0x01,  0xf9,  0x2d,  0x1d,  0xf5,  0x06,  0xff,
      0x04,  0xff,  0xfd,  0x31,  0x15,  0xf5,  0x07,  0xfe,
      0x05,  0xfc,  0x02,  0x35,  0x0d,  0xf7,  0x07,  0xfd }
  },
  { { 0x16640, 0x18000 }, // { 1433, 1536 },
    { 0xfe,  0x06,  0xf8,  0x0b,  0x30,  0x0b,  0xf8,  0x06,
      0xff,  0x06,  0xf7,  0x12,  0x2d,  0x05,  0xfa,  0x06,
      0x00,  0x04,  0xf6,  0x18,  0x2c,  0x00,  0xfc,  0x06,
      0x01,  0x02,  0xf7,  0x1f,  0x27,  0xfd,  0xff,  0x04,
      0x03,  0x00,  0xf9,  0x24,  0x24,  0xf9,  0x00,  0x03,
      0x04,  0xff,  0xfd,  0x29,  0x1d,  0xf7,  0x02,  0x01,
      0x06,  0xfc,  0x00,  0x2d,  0x17,  0xf6,  0x04,  0x00,
      0x06,  0xfa,  0x05,  0x30,  0x0f,  0xf7,  0x06,  0xff }
  },
  { { 0x18000, 0x20000 }, // { 1536, 2048 },
    { 0x05,  0xfd,  0xfb,  0x13,  0x25,  0x13,  0xfb,  0xfd,
      0x05,  0xfc,  0xfd,  0x17,  0x24,  0x0f,  0xf9,  0xff,
      0x04,  0xfa,  0xff,  0x1b,  0x24,  0x0b,  0xf9,  0x00,
      0x03,  0xf9,  0x01,  0x1f,  0x23,  0x08,  0xf8,  0x01,
      0x02,  0xf9,  0x04,  0x22,  0x20,  0x04,  0xf9,  0x02,
      0x01,  0xf8,  0x08,  0x25,  0x1d,  0x01,  0xf9,  0x03,
      0x00,  0xf9,  0x0c,  0x25,  0x1a,  0xfe,  0xfa,  0x04,
      0xff,  0xf9,  0x10,  0x26,  0x15,  0xfc,  0xfc,  0x05 }
  },
  { { 0x20000, 0x30000 }, // { 2048, 3072 },
    { 0xfc,  0xfd,  0x06,  0x13,  0x18,  0x13,  0x06,  0xfd,
      0xfc,  0xfe,  0x08,  0x15,  0x17,  0x12,  0x04,  0xfc,
      0xfb,  0xfe,  0x0a,  0x16,  0x18,  0x10,  0x03,  0xfc,
      0xfb,  0x00,  0x0b,  0x18,  0x17,  0x0f,  0x01,  0xfb,
      0xfb,  0x00,  0x0d,  0x19,  0x17,  0x0d,  0x00,  0xfb,
      0xfb,  0x01,  0x0f,  0x19,  0x16,  0x0b,  0x00,  0xfb,
      0xfc,  0x03,  0x11,  0x19,  0x15,  0x09,  0xfe,  0xfb,
      0xfc,  0x04,  0x12,  0x1a,  0x12,  0x08,  0xfe,  0xfc }
  },
  { { 0x30000, 0x40000 }, // { 3072, 4096 },
    { 0xfe,  0x02,  0x09,  0x0f,  0x0e,  0x0f,  0x09,  0x02,
      0xff,  0x02,  0x09,  0x0f,  0x10,  0x0e,  0x08,  0x01,
      0xff,  0x03,  0x0a,  0x10,  0x10,  0x0d,  0x07,  0x00,
      0x00,  0x04,  0x0b,  0x10,  0x0f,  0x0c,  0x06,  0x00,
      0x00,  0x05,  0x0c,  0x10,  0x0e,  0x0c,  0x05,  0x00,
      0x00,  0x06,  0x0c,  0x11,  0x0e,  0x0b,  0x04,  0x00,
      0x00,  0x07,  0x0d,  0x11,  0x0f,  0x0a,  0x03,  0xff,
      0x01,  0x08,  0x0e,  0x11,  0x0e,  0x09,  0x02,  0xff }
  },
  { { 0x40000, 0x50000 }, // { 4096, 5120 },
    { 0x00,  0x04,  0x09,  0x0c,  0x0e,  0x0c,  0x09,  0x04,
      0x01,  0x05,  0x09,  0x0c,  0x0d,  0x0c,  0x08,  0x04,
      0x01,  0x05,  0x0a,  0x0c,  0x0e,  0x0b,  0x08,  0x03,
      0x02,  0x06,  0x0a,  0x0d,  0x0c,  0x0b,  0x07,  0x03,
      0x02,  0x07,  0x0a,  0x0d,  0x0d,  0x0a,  0x07,  0x02,
      0x03,  0x07,  0x0b,  0x0d,  0x0c,  0x0a,  0x06,  0x02,
      0x03,  0x08,  0x0b,  0x0d,  0x0d,  0x0a,  0x05,  0x01,
      0x04,  0x08,  0x0c,  0x0d,  0x0c,  0x09,  0x05,  0x01 }
  },
  { { 0x50000, 0x60000 }, // { 5120, 6144 },
    { 0x03,  0x06,  0x09,  0x0b,  0x09,  0x0b,  0x09,  0x06,
      0x03,  0x06,  0x09,  0x0b,  0x0c,  0x0a,  0x08,  0x05,
      0x03,  0x06,  0x09,  0x0b,  0x0c,  0x0a,  0x08,  0x05,
      0x04,  0x07,  0x09,  0x0b,  0x0b,  0x0a,  0x08,  0x04,
      0x04,  0x07,  0x0a,  0x0b,  0x0b,  0x0a,  0x07,  0x04,
      0x04,  0x08,  0x0a,  0x0b,  0x0b,  0x09,  0x07,  0x04,
      0x05,  0x08,  0x0a,  0x0b,  0x0c,  0x09,  0x06,  0x03,
      0x05,  0x08,  0x0a,  0x0b,  0x0c,  0x09,  0x06,  0x03 }
  }
};

static const struct _bdisp_aq_blitfilter_coeffs_5x8 bdisp_aq_blitter_5x8_filters[] =
{
#if 0
  { { 0x00000, 0x0e640 }, // { 0, 921 },
    { 0x00,  0x00,  0x40,  0x00,  0x00, /*  0.000000  0.000000 1.000000  0.000000 0.000000 */
      0x00,  0x05,  0x3d,  0xfe,  0x00, /*  0.000000  0.078125 0.953125 -0.031250 0.000000 */
      0x00,  0x0d,  0x36,  0xfd,  0x00, /*  0.000000  0.203125 0.843750 -0.046875 0.000000 */
      0xff,  0x17,  0x2d,  0xfd,  0x00, /* -0.015625  0.359375 0.703125 -0.046875 0.000000 */
      0xfe,  0x23,  0x21,  0xfe,  0x00, /* -0.031250  0.546875 0.515625 -0.031250 0.000000 */
      0xfd,  0x2e,  0x16,  0xff,  0x00, /* -0.046875  0.718750 0.343750 -0.015625 0.000000 */
      0xfd,  0x37,  0x0c,  0x00,  0x00, /* -0.046875  0.859375 0.187500  0.000000 0.000000 */
      0xfe,  0x3e,  0x04,  0x00,  0x00  /* -0.031250  0.968750 0.062500  0.000000 0.000000 */ }
  },
  { { 0x0e640, 0x13300 }, // { 921, 1228 },
    { 0x00,  0x00,  0x40,  0x00,  0x00, /*  0.000000  0.000000 1.000000  0.000000 0.000000 */
      0xfd,  0x09,  0x3c,  0xfa,  0x04, /* -0.046875  0.140625 0.937500 -0.093750 0.062500 */
      0xf9,  0x13,  0x39,  0xf5,  0x06, /* -0.109375  0.296875 0.890625 -0.171875 0.093750 */
      0xf5,  0x1f,  0x31,  0xf3,  0x08, /* -0.171875  0.484375 0.765625 -0.203125 0.125000 */
      0xf3,  0x2a,  0x28,  0xf3,  0x08, /* -0.203125  0.656250 0.625000 -0.203125 0.125000 */
      0xf3,  0x34,  0x1d,  0xf5,  0x07, /* -0.203125  0.812500 0.453125 -0.171875 0.109375 */
      0xf5,  0x3b,  0x12,  0xf9,  0x05, /* -0.171875  0.921875 0.281250 -0.109375 0.078125 */
      0xfa,  0x3f,  0x07,  0xfd,  0x03  /* -0.093750  0.984375 0.109375 -0.046875 0.046875 */ }
  },
  { { 0x13300, 0x14cc0 }, // { 1228, 1331 },
#else
  { { 0x00000, 0x10000 }, // { 0, 1024 },
    /* bicubic */
    { 0x00,  0x00,  0x40,  0x00,  0x00, /*  0.000000  0.000000 1.000000  0.000000 0.000000 */
      0x00,  0x06,  0x3d,  0xfd,  0x00, /*  0.000000  0.093750 0.953125 -0.046875 0.000000 */
      0xfe,  0x0f,  0x38,  0xfb,  0x00,
      0xfd,  0x19,  0x2f,  0xfb,  0x00,
      0xfc,  0x24,  0x24,  0xfc,  0x00,
      0xfb,  0x2f,  0x19,  0xfd,  0x00,
      0xfb,  0x38,  0x0f,  0xfe,  0x00,
      0xfd,  0x3d,  0x06,  0x00,  0x00 }
  },
  { { 0x10000, 0x14cc0 }, // { 1024, 1331 },
#endif
    { 0xfc,  0x05,  0x3e,  0x05,  0xfc,
      0xf8,  0x0e,  0x3b,  0xff,  0x00,
      0xf5,  0x18,  0x38,  0xf9,  0x02,
      0xf4,  0x21,  0x31,  0xf5,  0x05,
      0xf4,  0x2a,  0x27,  0xf4,  0x07,
      0xf6,  0x30,  0x1e,  0xf4,  0x08,
      0xf9,  0x35,  0x15,  0xf6,  0x07,
      0xff,  0x37,  0x0b,  0xf9,  0x06 }
  },
  { { 0x14cc0, 0x16640 }, // { 1331, 1433 },
    { 0xf8,  0x0a,  0x3c,  0x0a,  0xf8,
      0xf6,  0x12,  0x3b,  0x02,  0xfb,
      0xf4,  0x1b,  0x35,  0xfd,  0xff,
      0xf4,  0x23,  0x30,  0xf8,  0x01,
      0xf6,  0x29,  0x27,  0xf6,  0x04,
      0xf9,  0x2e,  0x1e,  0xf5,  0x06,
      0xfd,  0x31,  0x16,  0xf6,  0x06,
      0x02,  0x32,  0x0d,  0xf8,  0x07 }
  },
  { { 0x16640, 0x18000 }, // { 1433, 1536 },
    { 0xf6,  0x0e,  0x38,  0x0e,  0xf6,
      0xf5,  0x15,  0x38,  0x06,  0xf8,
      0xf5,  0x1d,  0x33,  0x00,  0xfb,
      0xf6,  0x23,  0x2d,  0xfc,  0xfe,
      0xf9,  0x28,  0x26,  0xf9,  0x00,
      0xfc,  0x2c,  0x1e,  0xf7,  0x03,
      0x00,  0x2e,  0x18,  0xf6,  0x04,
      0x05,  0x2e,  0x11,  0xf7,  0x05 }
  },
  { { 0x18000, 0x20000 }, // { 1536, 2048 },
    { 0xfb,  0x13,  0x24,  0x13,  0xfb,
      0xfd,  0x17,  0x23,  0x0f,  0xfa,
      0xff,  0x1a,  0x23,  0x0b,  0xf9,
      0x01,  0x1d,  0x22,  0x07,  0xf9,
      0x04,  0x20,  0x1f,  0x04,  0xf9,
      0x07,  0x22,  0x1c,  0x01,  0xfa,
      0x0b,  0x24,  0x17,  0xff,  0xfb,
      0x0f,  0x24,  0x14,  0xfd,  0xfc }
  },
  { { 0x20000, 0x30000 }, // { 2048, 3072 },
    { 0x05,  0x10,  0x16,  0x10,  0x05,
      0x06,  0x11,  0x16,  0x0f,  0x04,
      0x08,  0x13,  0x15,  0x0e,  0x02,
      0x09,  0x14,  0x16,  0x0c,  0x01,
      0x0b,  0x15,  0x15,  0x0b,  0x00,
      0x0d,  0x16,  0x13,  0x0a,  0x00,
      0x0f,  0x17,  0x13,  0x08,  0xff,
      0x11,  0x18,  0x12,  0x07,  0xfe }
  },
  { { 0x30000, 0x40000 }, // { 3072, 4096 },
    { 0x09,  0x0f,  0x10,  0x0f,  0x09,
      0x09,  0x0f,  0x12,  0x0e,  0x08,
      0x0a,  0x10,  0x11,  0x0e,  0x07,
      0x0b,  0x11,  0x11,  0x0d,  0x06,
      0x0c,  0x11,  0x12,  0x0c,  0x05,
      0x0d,  0x12,  0x11,  0x0c,  0x04,
      0x0e,  0x12,  0x11,  0x0b,  0x04,
      0x0f,  0x13,  0x11,  0x0a,  0x03 }
  },
  { { 0x40000, 0x50000 }, // { 4096, 5120 },
    { 0x0a,  0x0e,  0x10,  0x0e,  0x0a,
      0x0b,  0x0e,  0x0f,  0x0e,  0x0a,
      0x0b,  0x0f,  0x10,  0x0d,  0x09,
      0x0c,  0x0f,  0x10,  0x0d,  0x08,
      0x0d,  0x0f,  0x0f,  0x0d,  0x08,
      0x0d,  0x10,  0x10,  0x0c,  0x07,
      0x0e,  0x10,  0x0f,  0x0c,  0x07,
      0x0f,  0x10,  0x10,  0x0b,  0x06 }
  },
  { { 0x50000, 0x60000 }, // { 5120, 6144 },
    { 0x0b,  0x0e,  0x0e,  0x0e,  0x0b,
      0x0b,  0x0e,  0x0f,  0x0d,  0x0b,
      0x0c,  0x0e,  0x0f,  0x0d,  0x0a,
      0x0c,  0x0e,  0x0f,  0x0d,  0x0a,
      0x0d,  0x0f,  0x0e,  0x0d,  0x09,
      0x0d,  0x0f,  0x0f,  0x0c,  0x09,
      0x0e,  0x0f,  0x0e,  0x0c,  0x09,
      0x0e,  0x0f,  0x0f,  0x0c,  0x08 }
  }
};


/* These magic numbers define a good filter */
static const struct _BltNodeGroup11 bdisp_aq_config_flicker_filter =
{
  .BLT_FF0 = 0x04008000,
  .BLT_FF1 = 0x06106010,
  .BLT_FF2 = 0x08185018,
  .BLT_FF3 = 0x00204020
};


const u32 bdisp_aq_VideoYCbCr601_2_RGB[4] = { 0x2c440000, 0xe9a403aa, 0x0004013f, 0x34f21322 };
static const u32 bdisp_aq_GfxYCbCr601_2_RGB[4]   = { 0x3324a800, 0xe604ab9c, 0x0004a957, 0x32121eeb };
static const u32 bdisp_aq_VideoYCbCr709_2_RGB[4] = { 0x31440000, 0xf16403d1, 0x00040145, 0x33b14b18 };
static const u32 bdisp_aq_GfxYCbCr709_2_RGB[4]   = { 0x3964a800, 0xef04abc9, 0x0004a95f, 0x307132df };

const u32 bdisp_aq_RGB_2_VideoYCbCr601[4] = { 0x107e4beb, 0x0982581d, 0xfa9ea483, 0x08000080 };
static const u32 bdisp_aq_RGB_2_GfxYCbCr601[4]   = { 0x0e1e8bee, 0x08420419, 0xfb5ed471, 0x08004080 };
static const u32 bdisp_aq_RGB_2_VideoYCbCr709[4] = { 0x107e27f4, 0x06e2dc13, 0xfc5e6c83, 0x08000080 };
static const u32 bdisp_aq_RGB_2_GfxYCbCr709[4]   = { 0x0e3e6bf5, 0x05e27410, 0xfcdea471, 0x08004080 };

static const u32 bdisp_aq_YCbCr601_2_YCbCr709[4] = { 0x20c00013, 0xf94403e2, 0x03a00102, 0x3f30abef };
#else /* __IS_BDISP_ACCEL_C__ */
extern const u32 bdisp_aq_VideoYCbCr601_2_RGB[4];
//extern const u32 bdisp_aq_GfxYCbCr601_2_RGB[4];
//extern const u32 bdisp_aq_VideoYCbCr709_2_RGB[4];
//extern const u32 bdisp_aq_GfxYCbCr709_2_RGB[4];

extern const u32 bdisp_aq_RGB_2_VideoYCbCr601[4];
//extern const u32 bdisp_aq_RGB_2_GfxYCbCr601[4];
//extern const u32 bdisp_aq_RGB_2_VideoYCbCr709[4];
//extern const u32 bdisp_aq_RGB_2_GfxYCbCr709[4];

//extern const u32 bdisp_aq_YCbCr601_2_YCbCr709[4];
#endif /* __IS_BDISP_ACCEL_C__ */

#endif /* __BDISP_TABLES_H__ */
